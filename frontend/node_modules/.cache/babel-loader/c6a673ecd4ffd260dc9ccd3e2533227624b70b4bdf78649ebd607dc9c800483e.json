{"ast":null,"code":"var _jsxFileName = \"/home/berzerk8/ServeEase/frontend/src/pages/Services.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { services } from '../services/api';\nimport ServiceCard from '../components/ServiceCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Services = () => {\n  _s();\n  const [serviceList, setServiceList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchServices = async () => {\n      try {\n        const response = await services.getAll();\n        setServiceList(response.data);\n      } catch (err) {\n        setError('Failed to fetch services');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchServices();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-10\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-red-500 text-center mt-10\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 py-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: \"Available Services\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",\n      children: serviceList.map(service => /*#__PURE__*/_jsxDEV(ServiceCard, {\n        service: service\n      }, service.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Services, \"1R5RAIElro2A7/WJqACvfVgSsig=\");\n_c = Services;\nexport default Services;\nvar _c;\n$RefreshReg$(_c, \"Services\");","map":{"version":3,"names":["React","useState","useEffect","services","ServiceCard","jsxDEV","_jsxDEV","Services","_s","serviceList","setServiceList","loading","setLoading","error","setError","fetchServices","response","getAll","data","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","service","id","_c","$RefreshReg$"],"sources":["/home/berzerk8/ServeEase/frontend/src/pages/Services.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { services } from '../services/api';\nimport ServiceCard from '../components/ServiceCard';\n\nconst Services = () => {\n  const [serviceList, setServiceList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchServices = async () => {\n      try {\n        const response = await services.getAll();\n        setServiceList(response.data);\n      } catch (err) {\n        setError('Failed to fetch services');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchServices();\n  }, []);\n\n  if (loading) return <div className=\"text-center mt-10\">Loading...</div>;\n  if (error) return <div className=\"text-red-500 text-center mt-10\">{error}</div>;\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <h1 className=\"text-3xl font-bold mb-6\">Available Services</h1>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {serviceList.map(service => (\n          <ServiceCard key={service.id} service={service} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Services; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMa,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMb,QAAQ,CAACc,MAAM,CAAC,CAAC;QACxCP,cAAc,CAACM,QAAQ,CAACE,IAAI,CAAC;MAC/B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZL,QAAQ,CAAC,0BAA0B,CAAC;MACtC,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE,oBAAOL,OAAA;IAAKc,SAAS,EAAC,mBAAmB;IAAAC,QAAA,EAAC;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACvE,IAAIZ,KAAK,EAAE,oBAAOP,OAAA;IAAKc,SAAS,EAAC,gCAAgC;IAAAC,QAAA,EAAER;EAAK;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAE/E,oBACEnB,OAAA;IAAKc,SAAS,EAAC,6BAA6B;IAAAC,QAAA,gBAC1Cf,OAAA;MAAIc,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/DnB,OAAA;MAAKc,SAAS,EAAC,sDAAsD;MAAAC,QAAA,EAClEZ,WAAW,CAACiB,GAAG,CAACC,OAAO,iBACtBrB,OAAA,CAACF,WAAW;QAAkBuB,OAAO,EAAEA;MAAQ,GAA7BA,OAAO,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CAClD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjB,EAAA,CAjCID,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AAmCd,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}