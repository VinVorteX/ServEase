{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8080/api';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add auth token to requests if available\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport const auth = {\n  login: credentials => api.post('/login', credentials),\n  register: userData => api.post('/register', userData)\n};\nexport const services = {\n  getAll: () => api.get('/services'),\n  getById: id => api.get(`/services/${id}`)\n};\nexport const bookings = {\n  create: bookingData => api.post('/bookings', bookingData),\n  getUserBookings: () => api.get('/bookings')\n};\nexport const providers = {\n  getAll: () => api.get('/providers'),\n  getProfile: id => api.get(`/providers/${id}`)\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","auth","login","credentials","post","register","userData","services","getAll","get","getById","id","bookings","bookingData","getUserBookings","providers","getProfile"],"sources":["/home/berzerk8/ServeEase/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8080/api';\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add auth token to requests if available\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\nexport const auth = {\n  login: (credentials) => api.post('/login', credentials),\n  register: (userData) => api.post('/register', userData),\n};\n\nexport const services = {\n  getAll: () => api.get('/services'),\n  getById: (id) => api.get(`/services/${id}`),\n};\n\nexport const bookings = {\n  create: (bookingData) => api.post('/bookings', bookingData),\n  getUserBookings: () => api.get('/bookings'),\n};\n\nexport const providers = {\n  getAll: () => api.get('/providers'),\n  getProfile: (id) => api.get(`/providers/${id}`),\n};\n\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,MAAMK,IAAI,GAAG;EAClBC,KAAK,EAAGC,WAAW,IAAKd,GAAG,CAACe,IAAI,CAAC,QAAQ,EAAED,WAAW,CAAC;EACvDE,QAAQ,EAAGC,QAAQ,IAAKjB,GAAG,CAACe,IAAI,CAAC,WAAW,EAAEE,QAAQ;AACxD,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAG;EACtBC,MAAM,EAAEA,CAAA,KAAMnB,GAAG,CAACoB,GAAG,CAAC,WAAW,CAAC;EAClCC,OAAO,EAAGC,EAAE,IAAKtB,GAAG,CAACoB,GAAG,CAAC,aAAaE,EAAE,EAAE;AAC5C,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAG;EACtBtB,MAAM,EAAGuB,WAAW,IAAKxB,GAAG,CAACe,IAAI,CAAC,WAAW,EAAES,WAAW,CAAC;EAC3DC,eAAe,EAAEA,CAAA,KAAMzB,GAAG,CAACoB,GAAG,CAAC,WAAW;AAC5C,CAAC;AAED,OAAO,MAAMM,SAAS,GAAG;EACvBP,MAAM,EAAEA,CAAA,KAAMnB,GAAG,CAACoB,GAAG,CAAC,YAAY,CAAC;EACnCO,UAAU,EAAGL,EAAE,IAAKtB,GAAG,CAACoB,GAAG,CAAC,cAAcE,EAAE,EAAE;AAChD,CAAC;AAED,eAAetB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}