{"ast":null,"code":"var _jsxFileName = \"/home/berzerk8/ServeEase/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  useEffect(() => {\n    if (token) {\n      // Get user data from token or API\n      // For now, just store token\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  }, [token]);\n  const login = (userData, authToken) => {\n    setUser(userData);\n    setToken(authToken);\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Z6Vnyj+tvkpOopJdPBR2TDv1n60=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","localStorage","getItem","setItem","removeItem","login","userData","authToken","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/home/berzerk8/ServeEase/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  useEffect(() => {\n    if (token) {\n      // Get user data from token or API\n      // For now, just store token\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  }, [token]);\n\n  const login = (userData, authToken) => {\n    setUser(userData);\n    setToken(authToken);\n  };\n\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, token, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext); "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,IAAI,CAAC;AAEvC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAACa,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EAEjEZ,SAAS,CAAC,MAAM;IACd,IAAIS,KAAK,EAAE;MACT;MACA;MACAE,YAAY,CAACE,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAAC;IACtC,CAAC,MAAM;MACLE,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC;IAClC;EACF,CAAC,EAAE,CAACL,KAAK,CAAC,CAAC;EAEX,MAAMM,KAAK,GAAGA,CAACC,QAAQ,EAAEC,SAAS,KAAK;IACrCT,OAAO,CAACQ,QAAQ,CAAC;IACjBN,QAAQ,CAACO,SAAS,CAAC;EACrB,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBV,OAAO,CAAC,IAAI,CAAC;IACbE,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC;EAED,oBACER,OAAA,CAACC,WAAW,CAACgB,QAAQ;IAACC,KAAK,EAAE;MAAEb,IAAI;MAAEE,KAAK;MAAEM,KAAK;MAAEG;IAAO,CAAE;IAAAb,QAAA,EACzDA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAClB,EAAA,CA7BWF,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AA+BzB,OAAO,MAAMsB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM5B,UAAU,CAACI,WAAW,CAAC;AAAA;AAACwB,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}